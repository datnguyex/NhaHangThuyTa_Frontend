interface IconType {
    width?: any;
    height?: any;
}
export const MagnifyingGlassGrey: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M22.16 22.16L16.9333 16.9333M2 10.7111C2 11.8551 2.22532 12.9878 2.66309 14.0447C3.10087 15.1016 3.74252 16.0619 4.55142 16.8708C5.36033 17.6797 6.32063 18.3214 7.37751 18.7591C8.43439 19.1969 9.56715 19.4222 10.7111 19.4222C11.8551 19.4222 12.9878 19.1969 14.0447 18.7591C15.1016 18.3214 16.0619 17.6797 16.8708 16.8708C17.6797 16.0619 18.3214 15.1016 18.7591 14.0447C19.1969 12.9878 19.4222 11.8551 19.4222 10.7111C19.4222 9.56715 19.1969 8.43439 18.7591 7.37751C18.3214 6.32063 17.6797 5.36033 16.8708 4.55142C16.0619 3.74252 15.1016 3.10087 14.0447 2.66309C12.9878 2.22532 11.8551 2 10.7111 2C9.56715 2 8.43439 2.22532 7.37751 2.66309C6.32063 3.10087 5.36033 3.74252 4.55142 4.55142C3.74252 5.36033 3.10087 6.32063 2.66309 7.37751C2.22532 8.43439 2 9.56715 2 10.7111Z"
                stroke="#929292"
                stroke-width="3"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>
    );
};
export const LocationWhite: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M20.8797 8.5C18.9197 -0.159998 6.08971 -0.169998 4.11971 8.49C2.96971 13.57 6.12971 17.88 8.88971 20.54C9.85764 21.4735 11.15 21.9952 12.4947 21.9952C13.8395 21.9952 15.1318 21.4735 16.0997 20.54C18.8697 17.88 22.0297 13.58 20.8797 8.5ZM13.6941 13.1927C13.3156 13.3495 12.9099 13.4302 12.5001 13.4302C11.6727 13.4302 10.8791 13.1015 10.294 12.5164C9.70884 11.9312 9.38013 11.1377 9.38013 10.3102C9.38013 9.48271 9.70884 8.68913 10.294 8.10401C10.8791 7.5189 11.6727 7.19019 12.5001 7.19019C12.9099 7.19019 13.3156 7.27089 13.6941 7.42768C14.0726 7.58448 14.4166 7.81429 14.7063 8.10401C14.996 8.39373 15.2258 8.73768 15.3826 9.11621C15.5394 9.49475 15.6201 9.90046 15.6201 10.3102C15.6201 10.7199 15.5394 11.1256 15.3826 11.5042C15.2258 11.8827 14.996 12.2266 14.7063 12.5164C14.4166 12.8061 14.0726 13.0359 13.6941 13.1927Z"
                fill="white"
            />
        </svg>
    );
};
export const TelephoneWhite: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M20.47 16.83C20.47 17.19 20.39 17.56 20.22 17.92C20.05 18.28 19.83 18.62 19.54 18.94C19.05 19.48 18.51 19.87 17.9 20.12C17.3 20.37 16.65 20.5 15.95 20.5C14.93 20.5 13.84 20.26 12.69 19.77C11.54 19.28 10.39 18.62 9.25 17.79C8.08811 16.9401 6.99169 16.0041 5.97 14.99C4.95877 13.972 4.0261 12.8789 3.18 11.72C2.36 10.58 1.7 9.44 1.22 8.31C0.74 7.17 0.5 6.08 0.5 5.04C0.5 4.36 0.62 3.71 0.86 3.11C1.1 2.5 1.48 1.94 2.01 1.44C2.65 0.81 3.35 0.5 4.09 0.5C4.37 0.5 4.65 0.56 4.9 0.68C5.16 0.8 5.39 0.98 5.57 1.24L7.89 4.51C8.07 4.76 8.2 4.99 8.29 5.21C8.38 5.42 8.43 5.63 8.43 5.82C8.43 6.06 8.36 6.3 8.22 6.53C8.09 6.76 7.9 7 7.66 7.24L6.9 8.03C6.79 8.14 6.74 8.27 6.74 8.43C6.74 8.51 6.75 8.58 6.77 8.66C6.8 8.74 6.83 8.8 6.85 8.86C7.03 9.19 7.34 9.62 7.78 10.14C8.23 10.66 8.71 11.19 9.23 11.72C9.77 12.25 10.29 12.74 10.82 13.19C11.34 13.63 11.77 13.93 12.11 14.11C12.16 14.13 12.22 14.16 12.29 14.19C12.37 14.22 12.45 14.23 12.54 14.23C12.71 14.23 12.84 14.17 12.95 14.06L13.71 13.31C13.96 13.06 14.2 12.87 14.43 12.75C14.66 12.61 14.89 12.54 15.14 12.54C15.33 12.54 15.53 12.58 15.75 12.67C15.97 12.76 16.2 12.89 16.45 13.06L19.76 15.41C20.02 15.59 20.2 15.8 20.31 16.05C20.41 16.3 20.47 16.55 20.47 16.83Z"
                fill="white"
            />
        </svg>
    );
};
export const ArrowWhiteRight: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_1_86)">
                <g filter="url(#filter0_d_1_86)">
                    <path
                        d="M8.33342 50.0003C8.33342 26.9878 26.9876 8.33366 50.0001 8.33366C73.0126 8.33366 91.6667 26.9878 91.6667 50.0003C91.6667 73.0128 73.0126 91.667 50.0001 91.667C26.9876 91.667 8.33342 73.0128 8.33342 50.0003Z"
                        fill="white"
                        fill-opacity="0.3"
                        shape-rendering="crispEdges"
                    />
                </g>
                <path
                    d="M44.7501 64.708L59.4167 49.9997L44.7501 35.2913"
                    stroke="white"
                    stroke-width="4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                />
            </g>
            <defs>
                <filter
                    id="filter0_d_1_86"
                    x="-7.6665"
                    y="-7.66602"
                    width="115.333"
                    height="115.333"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood flood-opacity="0" result="BackgroundImageFix" />
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    />
                    <feOffset />
                    <feGaussianBlur stdDeviation="8" />
                    <feComposite in2="hardAlpha" operator="out" />
                    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_86" />
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_86" result="shape" />
                </filter>
                <clipPath id="clip0_1_86">
                    <rect
                        width="100"
                        height="100"
                        fill="white"
                        transform="matrix(-1.19249e-08 -1 -1 1.19249e-08 100 100)"
                    />
                </clipPath>
            </defs>
        </svg>
    );
};
export const ArrowWhiteLeft: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_1_87)">
                <g filter="url(#filter0_d_1_87)">
                    <path
                        d="M91.6667 50.0003C91.6667 26.9878 73.0125 8.33366 50 8.33366C26.9875 8.33366 8.33337 26.9878 8.33337 50.0003C8.33337 73.0128 26.9875 91.667 50 91.667C73.0125 91.667 91.6667 73.0128 91.6667 50.0003Z"
                        fill="white"
                        fill-opacity="0.3"
                        shape-rendering="crispEdges"
                    />
                </g>
                <path
                    d="M55.25 64.708L40.5834 49.9997L55.25 35.2913"
                    stroke="white"
                    stroke-width="4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                />
            </g>
            <defs>
                <filter
                    id="filter0_d_1_87"
                    x="-7.66663"
                    y="-7.66602"
                    width="115.333"
                    height="115.333"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood flood-opacity="0" result="BackgroundImageFix" />
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    />
                    <feOffset />
                    <feGaussianBlur stdDeviation="8" />
                    <feComposite in2="hardAlpha" operator="out" />
                    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_87" />
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_87" result="shape" />
                </filter>
                <clipPath id="clip0_1_87">
                    <rect width="100" height="100" fill="white" transform="translate(0 100) rotate(-90)" />
                </clipPath>
            </defs>
        </svg>
    );
};
export const ListThreeDash: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M7.5 18H28.5M7.5 10.5H28.5M7.5 25.5H18"
                stroke="#3F3F41"
                stroke-width="3"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>
    );
};
export const CloseYellow: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 3L17 17" stroke="#C75D15" stroke-width="3" stroke-linecap="round" />
            <path d="M17 3L3 17" stroke="#C75D15" stroke-width="3" stroke-linecap="round" />
        </svg>
    );
};
export const ArrowDown: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="14" height="10" viewBox="0 0 14 10" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M2 3L7 8L12 3" stroke="#434146" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
    );
};
export const EclipseBgContentMenu: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        // 375
        // 254
        <svg width={width} height={height} viewBox="0 0 927 556" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle opacity="0.3" cx="289.5" cy="-81.5" r="559" stroke="url(#paint0_linear_1_116)" stroke-width="157" />
            <defs>
                <linearGradient
                    id="paint0_linear_1_116"
                    x1="953.5"
                    y1="-146.5"
                    x2="-133"
                    y2="677"
                    gradientUnits="userSpaceOnUse"
                >
                    <stop offset="0.402678" stop-color="#EE965B" />
                    <stop offset="1" stop-color="#EE965B" stop-opacity="0" />
                </linearGradient>
            </defs>
        </svg>
    );
};
export const ArrowLeftBlack: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M21.25 9.91699L12.75 18.7003L21.25 27.2003"
                stroke="#434146"
                stroke-width="5"
                stroke-linecap="round"
                stroke-linejoin="round"
            />
        </svg>
    );
};
export const TitleListDishMenu: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="161" height="85" viewBox="0 0 161 85" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_1_65)">
                <path
                    d="M143.65 57.49C135.95 56.46 128.65 58.14 121.75 61.34C114.84 64.54 108.1 68.1 101.32 71.57C87.36 78.72 72.96 84.01 56.87 81.94C48.47 80.86 40.93 77.97 36.48 70.12C33.25 64.42 34.43 57.65 39.52 54.13C45.98 49.66 53.09 48.85 60.57 51.59C61.57 51.96 62.94 51.83 63.95 51.44C64.34 51.29 64.43 49.71 64.25 48.87C61.59 36.63 61.95 24.38 63.84 12.09C64.39 8.50998 64.85 4.90998 65.36 1.31998C65.58 -0.390023 64.32 -0.520023 62.04 1.31998C56.94 5.86998 55.8 12.23 54.04 18.36C52.52 23.68 48.96 33.83 47.84 33.85C46.86 33.87 48.73 25.73 49.05 21.66C49.29 18.59 49.5 15.5 49.44 12.43C49.3 5.08998 47.08 3.65998 40.14 6.00998C39.21 6.32998 37.94 5.95998 36.91 5.63998C35.88 5.31998 35.01 4.46998 33.98 4.18998C31.64 3.54998 29.62 4.22998 29.07 6.73998C28.54 9.15998 30.45 9.92998 32.42 10.35C37.08 11.34 37.32 11.43 37.01 16.15C36.14 29.3 31.98 41.36 24.21 52.05C22.51 54.39 20.1 56.36 17.67 58C14.85 59.9 12.1 58.88 10.47 55.9C7.73001 50.91 9.88001 41.72 14.65 38.55C15.35 38.09 16.52 37.62 17.39 37.47C18.6 37.26 19.04 37.21 20.8 37.23C21.24 37.23 18.52 34.75 16.58 34.4C9.92001 33.21 3.93001 36.89 1.15001 43.11C0.800009 43.9 0.490009 44.79 0.290009 45.63C-0.119991 47.35 -0.0899909 49.2 0.290009 50.92C0.450009 51.66 0.720009 52.3 1.02001 53C4.68001 61.65 14.35 64.16 21.72 58.31C23.68 56.76 25.59 54.87 26.82 52.74C34.21 39.93 40.13 26.6 39.48 11.34C39.38 8.99998 40.32 8.22998 42.77 8.23998C41.73 13.69 40.39 18.91 39.82 24.22C39.17 30.32 39.11 36.5 39.02 42.64C38.99 44.84 40.3 46.37 42.79 46.35C44.93 46.33 45.72 45.53 47.07 43.28C48.13 41.52 50.72 35.69 52.99 31.18C54.78 37.65 56.29 43.09 57.67 48.07C52.17 48.84 46.7 49.06 41.55 50.46C35.38 52.15 30.6 56 29.89 62.96C29.2 69.74 32.62 74.57 38.13 78.04C44.26 81.9 51.14 83.4 58.28 83.88C75.36 85.05 91.06 80.53 106.01 72.61C113.41 68.69 120.92 64.91 128.56 61.48C133.25 59.37 138.35 58.75 143.47 60.26C148.57 61.77 151.25 65.95 150.28 70.8C149.44 75 143.97 78.78 140.01 77.88C136.58 77.1 135.53 74.59 136.68 69.66C134.39 68.31 132.12 69.07 130.91 70.87C130.01 72.21 129.67 74.82 130.4 76.14C131.36 77.88 133.42 79.45 135.35 80.16C142.29 82.7 148.68 81.12 154.15 76.37C157.68 73.3 158.15 68.73 155.71 64.64C153 60.1 148.67 58.14 143.63 57.46L143.65 57.49Z"
                    fill="#3F3F41"
                />
                <path
                    d="M68.1301 46.9495C72.1301 51.3595 77.3001 52.6795 82.9401 50.8795C85.7201 49.9895 88.2301 48.2695 91.1001 46.7995C91.0401 46.7595 91.3101 46.9095 91.5601 47.0795C96.1101 50.3395 98.4101 48.2195 99.7201 41.6795C100.91 35.7395 103.25 30.1395 106.24 24.8695C107.36 22.8795 108.63 17.7395 111.83 17.1395C112.28 17.0595 112.78 17.3595 112.93 17.7895C113.38 19.0995 112.23 20.4895 111.74 21.7795C109.54 27.6495 106.87 33.3895 105.19 39.4095C104.07 43.4395 103.81 47.8795 104.11 52.0695C104.38 55.8395 106.7 58.9895 110.84 59.7295C114.8 60.4395 117.63 58.2495 119.73 55.1795C121.02 53.2995 121.96 51.1895 123.1 49.0995C129.31 51.6395 132.57 47.3995 135.53 44.0295C138.39 45.7795 140.85 48.1295 143.73 48.8795C152.32 51.1295 163.09 38.9995 160.37 30.4995C159.26 27.0295 155.9 25.9295 152.37 27.9695C152.51 28.3495 152.86 28.6495 153.07 29.0095C156.59 34.9895 155.69 40.3095 150.63 44.7895C149.57 45.7295 147.82 46.7995 146.74 46.5395C145.48 46.2295 144.11 45.6595 143.9 42.0395C143.64 37.4695 145.09 33.7295 145.58 29.1595C145.7 28.0595 145.89 26.7895 145.76 25.6695C145.71 25.2095 145.28 24.8795 144.82 24.9395C143.42 25.1395 141.97 25.2495 140.78 25.8595C139.61 26.4595 138.56 27.7895 138.02 29.0395C136.89 31.6395 136.03 34.3795 135.25 37.1095C134.08 41.2095 130.43 47.5995 127.46 46.9995C125.15 46.5295 125.71 41.7395 125.99 40.1895C126.96 34.8895 129.69 30.8995 130.63 25.5995C130.82 24.5495 130.53 22.7295 129.87 22.3895C128.94 21.8995 127.38 22.2395 126.23 22.6195C125.23 22.9495 124.16 23.6695 123.58 24.5195C119.48 30.5795 117.3 37.2095 119.27 44.4795C120.51 49.0595 119.22 54.0195 115.26 56.8895C112.53 58.8695 110.77 58.2495 110.06 54.9395C109.83 53.8795 109.67 52.6795 109.94 51.6595C111.25 46.7895 112.6 41.9195 114.17 37.1295C115.87 31.8995 117.99 26.8095 119.6 21.5495C120.3 19.2795 120.68 16.1195 118.1 15.0295C115.95 14.1195 112.51 13.8295 110.73 14.9595C107.7 16.8795 105.16 19.8895 103.11 22.9095C101.19 25.7495 100.17 29.1995 98.6101 32.7095C98.7101 30.7095 98.9101 29.0595 98.8201 27.4195C98.7801 26.6495 98.4901 25.2795 97.9601 25.1195C97.1601 24.8795 94.7301 25.4795 94.2201 26.0495C93.0101 27.4195 92.6301 28.7395 92.1601 30.4495C91.2001 33.9295 90.7901 37.5595 90.0901 41.1195C89.3301 44.9295 85.2101 48.9495 81.8501 49.2395C78.5701 49.5195 75.3801 47.1595 74.1801 43.9095C77.6801 42.3595 81.4001 41.2295 84.5401 39.1895C89.2501 36.1295 91.0901 30.9795 89.5601 27.3095C88.1101 23.8295 83.7301 21.8595 78.1601 22.4595C72.3301 23.0895 68.3801 26.4495 66.2701 31.7495C64.1601 37.0595 63.9901 42.4195 68.1001 46.9495H68.1301ZM75.0401 29.6295C76.3701 27.6095 80.3501 24.6495 82.8001 25.9595C85.1401 27.2095 85.3301 29.3895 84.7501 31.6995C83.6201 36.1995 81.0301 39.2795 76.3701 40.5595C73.5101 41.3395 72.5901 39.0795 72.5201 37.6695C72.4801 36.7395 72.4901 33.5195 75.0301 29.6395L75.0401 29.6295Z"
                    fill="#3F3F41"
                />
            </g>
            <defs>
                <clipPath id="clip0_1_65">
                    <rect width="160.8" height="84.09" fill="white" />
                </clipPath>
            </defs>
        </svg>
    );
};
export const MenuOrderIcon: React.FC<IconType> = ({ width = '2.4rem', height = '2.4rem' }) => {
    return (
        <svg width="48" height="61" viewBox="0 0 48 61" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g filter="url(#filter0_d_596_13214)">
                <rect x="4" y="13" width="40" height="40" rx="6" fill="#ED7D31" shape-rendering="crispEdges" />
                <path
                    d="M33.5423 31.1614H14.7336C14.452 31.1614 14.2369 30.8955 14.278 30.6028C15.0054 25.5486 19.1429 21.6797 24.137 21.6797C29.1329 21.6797 33.2685 25.5486 33.9959 30.6028C34.0389 30.8955 33.8238 31.1614 33.5423 31.1614Z"
                    fill="white"
                />
                <path
                    d="M26.1821 21.0612H22.0934C22.0328 21.0612 21.9858 21.0035 21.9937 20.9396C22.152 19.841 23.0515 19 24.1367 19C25.222 19 26.1214 19.841 26.2798 20.9396C26.2896 21.0035 26.2427 21.0612 26.1821 21.0612Z"
                    fill="white"
                />
                <path
                    d="M35.1847 33.4286H13.0891C12.7645 33.4286 12.5024 33.1524 12.5024 32.8103C12.5024 32.4681 12.7645 32.1919 13.0891 32.1919H35.1847C35.5093 32.1919 35.7713 32.4681 35.7713 32.8103C35.7713 33.1524 35.5093 33.4286 35.1847 33.4286Z"
                    fill="white"
                />
                <path
                    d="M20.6322 24.5467C19.2889 24.9445 18.2447 25.7958 17.6151 26.8388C17.4919 27.0387 17.2768 27.0841 17.1028 26.9336C16.9307 26.7831 16.8623 26.4904 16.9835 26.2802C17.6034 25.196 18.6612 24.2828 20.0417 23.817C20.3077 23.7263 20.6733 23.8376 20.8317 24.0458C20.9901 24.254 20.8904 24.4704 20.6322 24.5467Z"
                    fill="#ED7D31"
                />
                <path
                    d="M18.0566 45H17.2412V40.3027C17.2412 39.9316 17.264 39.4775 17.3096 38.9404H17.29C17.2119 39.2562 17.1419 39.4824 17.0801 39.6191L14.6875 45H14.2871L11.8994 39.6582C11.8311 39.502 11.7611 39.2627 11.6895 38.9404H11.6699C11.696 39.2204 11.709 39.6777 11.709 40.3125V45H10.918V37.998H12.002L14.1504 42.8809C14.3164 43.2552 14.4238 43.5352 14.4727 43.7207H14.502C14.6419 43.3366 14.7542 43.0501 14.8389 42.8613L17.0312 37.998H18.0566V45ZM23.2133 45H19.5023V37.998H23.057V38.7402H20.3227V41.0693H22.852V41.8066H20.3227V44.2578H23.2133V45ZM29.8055 45H28.7996L25.1961 39.4189C25.1049 39.279 25.0301 39.1325 24.9715 38.9795H24.9422C24.9682 39.1292 24.9812 39.4499 24.9812 39.9414V45H24.1609V37.998H25.2254L28.7312 43.4912C28.8777 43.7191 28.9721 43.8753 29.0145 43.96H29.034C29.0014 43.7581 28.9852 43.4147 28.9852 42.9297V37.998H29.8055V45ZM36.3635 42.168C36.3635 44.1341 35.4764 45.1172 33.7023 45.1172C32.0031 45.1172 31.1535 44.1715 31.1535 42.2803V37.998H31.9738V42.2266C31.9738 43.6621 32.5793 44.3799 33.7902 44.3799C34.9589 44.3799 35.5432 43.6865 35.5432 42.2998V37.998H36.3635V42.168Z"
                    fill="white"
                />
            </g>
            <path
                d="M15 12.232V15.078C15 15.5872 15.4128 16 15.9219 16H33.0575C33.578 16 34 15.578 34 15.0575V12.507C34 9.50313 30.8526 7.53819 28.1538 8.85714L28.0378 8.60972C26.5147 5.36204 21.8442 5.51613 20.5385 8.85714C18.011 7.5533 15 9.38806 15 12.232Z"
                fill="#E67020"
            />
            <defs>
                <filter
                    id="filter0_d_596_13214"
                    x="0"
                    y="13"
                    width="48"
                    height="48"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood flood-opacity="0" result="BackgroundImageFix" />
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    />
                    <feOffset dy="4" />
                    <feGaussianBlur stdDeviation="2" />
                    <feComposite in2="hardAlpha" operator="out" />
                    <feColorMatrix
                        type="matrix"
                        values="0 0 0 0 0.780392 0 0 0 0 0.364706 0 0 0 0 0.0823529 0 0 0 0.15 0"
                    />
                    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_596_13214" />
                    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_596_13214" result="shape" />
                </filter>
            </defs>
        </svg>
    );
};
